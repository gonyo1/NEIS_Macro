import os
import pandas as pd
import numpy as np
from glob import glob
from pprint import pprint

def 평가시기구분():
    start = 0
    end = 0

    rows = []

    for row, value in enumerate(df["평가시기"]):
        if value is not np.nan:
            if row > 0:
                end = row - 1
                rows.append((start, end))
                start = row
        elif (row + 1) == len(df["평가시기"]):
            rows.append((start, row))

    return rows


def 성취기준처리(series):
    성취기준 = [x for x in series.to_list() if x is not np.nan]
    성취기준 = "".join(성취기준)
    성취기준 = 성취기준.replace("  ", " ")
    성취기준 = 성취기준.replace("] ", "]")
    성취기준 = 성취기준.replace("]", "] ")
    성취기준 = 성취기준.replace(". ", ".")
    성취기준 = 성취기준[:8].replace(" ", "") + 성취기준[8:]
    성취기준 = [x.strip() + "." for x in 성취기준.split(".") if len(x) > 5]

    return 성취기준


def 영역명처리(학년, 성취기준_리스트):
    영역 = {
        "국": {
            "01": "듣기·말하기",
            "02": "읽기",
            "03": "쓰기",
            "04": "문법",
            "05": "문학",
            "06": "매체"
        },
        "수": {
            "01": "수와 연산",
            "02": "도형",
            "03": "측정",
            "04": "규칙성",
            "05": "자료와 가능성"
        },
        "사": {
            "01": "우리가 살아가는 곳",
            "02": "우리가 살아가는 모습",
            "03": "우리 지역의 어제와 오늘",
            "04": "다양한 삶의 모습과 변화"
        },
        "과중": {
            "01": "물질의 성질",
            "02": "물질의 성질",
            "03": "동물의 생활",
            "04": "지표의 변화",
            "05": "식물의 생활",
            "06": "지층과 화석",
            "07": "물질의 상태",
            "08": "소리의 성질",
            "09": "물체의 무게",
            "10": "동물의 한살이",
            "11": "화산과 지진",
            "12": "혼합물의 분리",
            "13": "식물의 한살이",
            "14": "물의 상태 변화",
            "15": "그림자와 거울",
            "16": "지구의 모습",
            "17": "물의 여행"
        },
        "과고": {
            "01": "온도와 열",
            "02": "태양계와 별",
            "03": "용해와 용액",
            "04": "다양한 생물과 우리 생활",
            "05": "생물과 환경",
            "06": "날씨와 우리 생활",
            "07": "물체의 운동",
            "08": "산과 염기",
            "09": "지구와 달의 운동",
            "10": "여러 가지 기체",
            "11": "빛과 렌즈",
            "12": "식물의 구조와 기능",
            "13": "전기의 이용",
            "14": "계절의 변화",
            "15": "연소와 소화",
            "16": "우리 몸의 구조와 기능",
            "17": "에너지와 생활"
        },
        "도": {
            "01": "자신과의 관계",
            "02": "타인과의 관계",
            "03": "사회·공동체와의 관계",
            "04": "자연·초월과의 관계"
        },
        "체": {
            "01": "건강",
            "02": "도전",
            "03": "경쟁",
            "04": "표현",
            "05": "안전",
        },
        "음": {
            "01": "표현",
            "02": "감상",
            "03": "생활화"
        },
        "미": {
            "01": "체험",
            "02": "표현",
            "03": "감상"
        },
        "영": {
            "01": "듣기",
            "02": "말하기",
            "03": "읽기",
            "04": "쓰기"
        },
        "바": {
            "01": "우리는 누구로 살아갈까",
            "02": "우리는 어디서 살아갈까",
            "03": "우리는 지금 어떻게 살아갈까",
            "04": "우리는 무엇을 하며 살아갈까"
        },
        "슬": {
            "01": "우리는 누구로 살아갈까",
            "02": "우리는 어디서 살아갈까",
            "03": "우리는 지금 어떻게 살아갈까",
            "04": "우리는 무엇을 하며 살아갈까"
        },
        "즐": {
            "01": "우리는 누구로 살아갈까",
            "02": "우리는 어디서 살아갈까",
            "03": "우리는 지금 어떻게 살아갈까",
            "04": "우리는 무엇을 하며 살아갈까"
        },
        "실": {
            "01": "인간 발달과 가족",
            "02": "가정생활과 안전",
            "03": "자원 관리와 자립",
            "04": "기술 시스템",
            "05": "기술 활용"
        }
    }
    영역명리스트 = list()
    for item in 성취기준_리스트:
        교과목 = item[2]
        if 교과목 == "과" and int(학년) <= 4:
            교과목 = "과중"
        elif 교과목 == "과" and int(학년) <= 6:
            교과목 = "과고"

        영역코드 = item[3:5]
        영역명 = 영역[교과목][영역코드]
        영역명리스트.append(영역명)
    return 영역명리스트


def 평가요소처리(series):
    평가요소 = [x for x in series.to_list() if x is not np.nan]
    평가요소 = "\n".join(평가요소)
    평가요소 = 평가요소.replace("  ", " ")
    평가요소 = 평가요소.replace("▪ ", "·")
    평가요소 = 평가요소.replace("▪", "·")
    평가요소 = 평가요소.replace("￭ ", "·")
    평가요소 = 평가요소.replace("￭", "·")
    평가요소 = 평가요소.replace("\n\n", "\n")
    # 평가요소 = [x.strip() + "." for x in 평가요소.split("▪") if len(x) > 5]

    return 평가요소

row_data = list()
학년별평가계획 = [item for item in glob(os.path.abspath("../*학년 평가.xlsx")) if not "~" in item]

for file in 학년별평가계획:
    # 학년 추출
    학년 = os.path.basename(file)[0]

    # 과목별 처리 시작
    if int(학년) <= 2:
        과목명 = ["국어", "수학", "바른생활슬기로운생활즐거운생활"]
    elif int(학년) <= 4:
        과목명 = ["국어", "수학", "사회", "과학", "음악", "미술", "체육", "도덕", "영어"]
    else:
        과목명 = ["국어", "수학", "사회", "과학", "음악", "미술", "체육", "도덕", "영어", "실과"]

    for 과목 in 과목명:

        # 판다스에서 해당 과목 시트 읽기
        df = pd.read_excel(file, na_values="", sheet_name=과목)

        # 평가 시기에 따라 데이터 프레임 나누기
        rows = 평가시기구분()

        # 행별로 데이터 처리
        for start, end in rows:

            영역그룹 = list()
            성취기준그룹 = list()
            평가요소그룹 = list()

            end += 1
            성취기준리스트 = 성취기준처리(df.iloc[start:end]["성취기준"])
            평가기준 = [item for item in df.iloc[start:end, 6].tolist() if type(item) == str]

            영역데이터 = df.iloc[start:end]["평가영역"].tolist()
            # print(start, 영역데이터)
            영역 = ", ".join([a for a in 영역데이터 if type(a) is not float])
            # 영역 = 영역명처리(학년, 성취기준리스트)

            # 성취기준별로 행 데이터 기록
            for index, 성취기준 in enumerate(성취기준리스트):
                평가요소 = 평가요소처리(df.iloc[start:end]["평가 요소"])
                영역그룹.append(영역)
                성취기준그룹.append(성취기준)
                평가요소그룹.append(평가요소)

            영역그룹 = "\n".join(sorted(list(set(영역그룹))))
            성취기준그룹 = "\n".join(list(set(성취기준그룹)))
            평가요소그룹 = "\n".join(list(set(평가요소그룹)))

            item_length = len([학년, 과목, 영역그룹, 성취기준그룹, 평가요소그룹]+평가기준)
            if item_length == 8:
                row_data.append([학년, 과목, 영역그룹, 성취기준그룹, 평가요소그룹] + 평가기준)
            else:
                print([학년, 과목, 영역그룹, 성취기준그룹, 평가요소그룹] + 평가기준)
df_final = pd.DataFrame(columns=["학년", "과목", "영역명", "성취기준", "평가요소", "잘함", "보통", "노력요함"], data=row_data)

output_path = os.path.abspath(f"../2학기_최종평가파일.xlsx")
df_final.to_excel(output_path, index=False)